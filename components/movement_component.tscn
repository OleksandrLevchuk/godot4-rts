[gd_scene load_steps=6 format=3 uid="uid://cjl74u827soth"]

[ext_resource type="Texture2D" uid="uid://dgu547gfxj11c" path="res://art/units/parts/track_spritesheet.png" id="1_f3nfg"]

[sub_resource type="GDScript" id="GDScript_ugeiu"]
script/source = "extends Node2D

var test: Variant
## how many pixels it traverses per second at most
@export var MAX_SPEED: float = 200
## how many seconds it takes to reach max speed
@export var ACCEL_TIME: float = 1.5
## how many degrees it can turn per second
@export var TURN_RATE: float = PI / 3
@export var SPEED_CURVE: Curve

var is_moving: bool = false

@onready var parent := get_owner()
#@onready var line: RefCounted = preload(\"res://components/movement/Trajectory.gd\").new(self)
@onready var velocity_calculator: RefCounted = preload(\"res://components/movement/VelocityCalculator.gd\").new(self)

signal departed
signal minimap_updated
signal arrived


func _ready():
	set_process(false)
	velocity_calculator.arrived.connect(_on_arrived)
	%MinimapUpdateTimer.timeout.connect(func(): 
		minimap_updated.emit( parent.position )
	)


func _process(delta):
	velocity_calculator.calculate(delta)
	parent.velocity = velocity_calculator.velocity
	parent.rotation = velocity_calculator.facing.angle()
	parent.move_and_slide()


func _on_arrived():
	print(self, ' arrived')
	arrived.emit()
	set_process(false)
	%MinimapUpdateTimer.stop() # the minimap update timer


func _on_ordered_to_move( dest ):
	print(self, ' departed')
	departed.emit()
	velocity_calculator.start( self, dest )
#	line.draw( self, dest )
	set_process( true )
	%MinimapUpdateTimer.start() # the minimap update timer
"

[sub_resource type="Animation" id="Animation_66ek5"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_jhrpe"]
resource_name = "drive"
length = 0.4
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_3hjh7"]
_data = {
"RESET": SubResource("Animation_66ek5"),
"drive": SubResource("Animation_jhrpe")
}

[node name="MovementComponent" type="Node2D"]
script = SubResource("GDScript_ugeiu")

[node name="Animation" type="AnimationPlayer" parent="."]
unique_name_in_owner = true
root_node = NodePath("../..")
libraries = {
"": SubResource("AnimationLibrary_3hjh7")
}

[node name="TrackSprite" type="Sprite2D" parent="."]
rotation = 1.57079
scale = Vector2(0.063, 0.063)
texture = ExtResource("1_f3nfg")
hframes = 4

[node name="MinimapUpdateTimer" type="Timer" parent="."]
unique_name_in_owner = true
