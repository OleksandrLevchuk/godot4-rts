[gd_scene load_steps=4 format=3 uid="uid://vn2pj1fllvl8"]

[ext_resource type="Theme" uid="uid://ccb7csnxqndm6" path="res://ui/my_ui_theme.tres" id="2_yweqt"]

[sub_resource type="GDScript" id="GDScript_ht1wh"]
script/source = "extends ProgressBar
class_name HealthComponent

@export var MAX_HEALTH: int = 20

@onready var animation := $Line2D
var health : int:
	set(x):
		health = x
		value = x
		animation.animate_to( float(x) / float(MAX_HEALTH) )

signal died

func _ready():
	died.connect( func(): 
		get_tree().create_timer(1000).timeout.connect(get_owner().queue_free)
	)
	max_value = MAX_HEALTH
	value = MAX_HEALTH
	health = MAX_HEALTH
	visible = false
	####################
	if has_node(\"%MovementComponent\"): # if unit is movable, prevent rotation
		top_level = true # detach component from inheriting parent transform
		# then sync it's position back upon movement
		%MovementComponent.departed.connect(func(): set_process(true))
		%MovementComponent.arrived.connect(func(): set_process(false))
	$TemporaryVisible.timeout.connect(_on_temporary_visibility_end)


func _process(_delta): # sync the position of the select box with it's parent
	position = get_owner().position


func take_damage( dmg ):
	$TemporaryVisible.start()
	visible=true
	health -= dmg
	print(\"%s lost %s hit points, %s left.\" % [self.get_owner(), dmg, health])
	if health <= 0:
		died.emit()


func _on_selected():
	visible = true


func _on_deselected():
	visible = false


func _on_temporary_visibility_end():
	if not %SelectionComponent.is_selected:
		visible = false
"

[sub_resource type="GDScript" id="GDScript_574ft"]
script/source = "extends Line2D

var is_healing: bool = false
var health: float
var prev_health: float
var left: float:
	set(x):
		left = x
		points[0].x = health * 70

var right: float:
	set(x):
		right = x
		points[1].x = health * 70

@export var EASE_TIME: float = 2
var elapsed: float


func _ready():
	%Ease.timeout.connect(func(): 
		visible = true
		set_process(false)
	)
	left = 0
	right = 70


func _process(_delta):
	right = lerp( health, prev_health, %Ease.time_left / %Ease.wait_time )


func animate_to( new_value ):
	visible = true
	%Ease.start()
	if new_value>health:
		is_healing = true
		right = new_value
	else:
		left = new_value
	prev_health = health
	health = new_value
	set_process(true)
"

[node name="HealthComponent" type="ProgressBar"]
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -611.0
offset_top = -32.0
offset_right = -541.0
offset_bottom = -28.0
grow_horizontal = 2
theme = ExtResource("2_yweqt")
value = 80.0
show_percentage = false
script = SubResource("GDScript_ht1wh")
metadata/_edit_use_anchors_ = true

[node name="Line2D" type="Line2D" parent="."]
position = Vector2(0, 6)
points = PackedVector2Array(0, 0, 70, 0)
width = 4.0
script = SubResource("GDScript_574ft")

[node name="TemporaryVisible" type="Timer" parent="."]
wait_time = 3.0
one_shot = true

[node name="Ease" type="Timer" parent="."]
unique_name_in_owner = true
one_shot = true
