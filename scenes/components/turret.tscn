[gd_scene load_steps=10 format=3 uid="uid://btoyouaxxhuk2"]

[ext_resource type="Texture2D" uid="uid://c2rvu0rv0p7h" path="res://art/units/parts/turret_1.png" id="1_f4yuh"]
[ext_resource type="Texture2D" uid="uid://c8y1sundt1qgn" path="res://art/units/parts/turret_1_short_n.png" id="2_6ye0n"]
[ext_resource type="PackedScene" uid="uid://2lehy33cf5j3" path="res://scenes/components/barrel.tscn" id="3_xvw11"]

[sub_resource type="CanvasTexture" id="CanvasTexture_i14q3"]
diffuse_texture = ExtResource("1_f4yuh")
normal_texture = ExtResource("2_6ye0n")

[sub_resource type="GDScript" id="GDScript_p01b1"]
resource_name = "Turret"
script/source = "extends Sprite2D

var DAMAGE: int

@export var TURN_RATE: float = PI
@export var COOLDOWN: float = 0.2

@onready var barrel := $BarrelClippingMask/BarrelSprite
@onready var trace := $MissileTrace
@onready var flash := $MuzzleFlash
@onready var sparks := $Sparks
@onready var cooldown := $AttackCooldown
@onready var initial_offset: float = offset.x

var RECOIL_STRENGTH: float = -15
var recoil: float = 0:
	set(x):
		recoil = x
		barrel.recoil = x
		offset.x = initial_offset + x * RECOIL_STRENGTH
var target: Node2D
var initial_angle: float
var is_in_range: bool 
var is_aimed: bool
var is_shooting: bool


func _ready():
	cooldown.timeout.connect(shoot)
	set_process(false) # don't turn the turret until ordered to attack


func engage( tar: Node2D ):
	print('my target was ', target, ', now engaging this ', tar)
	is_shooting = true
	target = tar
	initial_angle = get_angle_to( target.position )
	target.health.died.connect(_on_target_died)
	set_process(true)


func _process( delta ):
	is_in_range = check_target_in_range()
	is_aimed = check_rotation_and_aim( delta )
	print(randi()%10, \" aiming: \", is_aimed, \", in range: \", is_in_range)
	if is_in_range and is_aimed:
		set_process(false)
		print(\"target engaged, attacking now!\")
		shoot()

func check_target_in_range() -> bool:
	return true


func check_rotation_and_aim( delta ) -> bool:
	var desired_angle: float = get_angle_to( target.position )
	var increment: float = delta * TURN_RATE
	if increment < abs( desired_angle ):
		rotation += increment * sign( desired_angle )
		return false
	else:
		rotation += desired_angle
		return true


func shoot():
	print( \"shooting at \", target )
	cooldown.start()
#	trace.shoot( flash.position.distance_to(target.position) )
	flash.flash()
	sparks.restart()
	var tween := create_tween()
	tween.tween_property(self, 'recoil', 1, 0.05)
	tween.tween_property(self, 'recoil', 0, 0.5).set_trans(Tween.TRANS_CIRC).set_ease(Tween.EASE_OUT)
	target.health.take_damage( DAMAGE )


func _on_target_died():
	disengage()
	
func disengage():
	target.health.died.disconnect(_on_target_died)
	set_process(false)
	cooldown.stop()
	target = null
	is_shooting = false
"

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_gsfhd"]
blend_mode = 3

[sub_resource type="Gradient" id="Gradient_br721"]
offsets = PackedFloat32Array(0.398305, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_n4vlu"]
gradient = SubResource("Gradient_br721")
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(0.5, 0)

[sub_resource type="OccluderPolygon2D" id="OccluderPolygon2D_5ssf0"]
polygon = PackedVector2Array(40, 7, 78, 25, 47, 18, 41, 26, 63, 48, 35, 29, 21, 32, 13, 49, 16, 26, -30, 16, -43, 20, -30, 8, -30, -7, -44, -21, -32, -16, 17, -26, 13, -44, 25, -33, 39, -33, 61, -50, 43, -28, 47, -19, 78, -25, 40, -6)

[node name="Turret" type="Sprite2D"]
z_index = 1
position = Vector2(40, 0)
texture = SubResource("CanvasTexture_i14q3")
offset = Vector2(-20, 0)
script = SubResource("GDScript_p01b1")

[node name="TurretDiffuseShadow" type="Sprite2D" parent="."]
z_index = -1
material = SubResource("CanvasItemMaterial_gsfhd")
position = Vector2(-28.1348, 0)
scale = Vector2(2.81445, 2.15625)
texture = SubResource("GradientTexture2D_n4vlu")
offset = Vector2(5, 0)

[node name="Barrel" parent="." instance=ExtResource("3_xvw11")]

[node name="CastShadow" type="LightOccluder2D" parent="."]
position = Vector2(-40, 0)
occluder = SubResource("OccluderPolygon2D_5ssf0")
occluder_light_mask = 2

[node name="AttackCooldown" type="Timer" parent="."]
wait_time = 0.3
one_shot = true
