[gd_scene load_steps=14 format=3 uid="uid://cec74psspjrbe"]

[ext_resource type="Texture2D" uid="uid://b0htollqtnx6f" path="res://art/units/parts/body.png" id="2_f6vc8"]
[ext_resource type="PackedScene" uid="uid://bs11pbxtx5l0y" path="res://scenes/components/selection.tscn" id="3_3w5sw"]
[ext_resource type="PackedScene" uid="uid://hubac0378rie" path="res://scenes/components/health.tscn" id="5_7qv1c"]
[ext_resource type="Texture2D" uid="uid://c0xsasdpoyg17" path="res://art/units/parts/body_n.png" id="5_qioos"]
[ext_resource type="PackedScene" uid="uid://btoyouaxxhuk2" path="res://scenes/components/turret.tscn" id="8_q1ujq"]

[sub_resource type="GDScript" id="GDScript_bd8pa"]
resource_name = "Unit"
script/source = "extends CharacterBody2D

@export_enum(\"None\", \"Object\", \"Unit\", \"Building\") 
var minimap_marker_type: String = \"Unit\"
@export var SPEED: float = 200
@export var HEALTH: float = 100
@export var DAMAGE: float = 17

@onready var engine: Node = $Engine # calculates acceleration and turning
@onready var turret: Node = $Turret
@onready var health: Node = $UIParent/Health
@onready var selection: Node = $UIParent/Selection
@onready var minimap_updater: Timer = $MinimapUpdater

var is_moving: bool = false

signal minimap_updated


func _ready():
	health.MAX_HEALTH = HEALTH
	turret.DAMAGE = DAMAGE
	Game.minimap.add_marker(self)
	set_process( false ) # only process upon movement
	input_pickable = true # enables mouse hover
	mouse_entered.connect(_on_mouse_entered)
	mouse_exited.connect(_on_mouse_exited)
	engine.halted.connect(_on_engine_halted)
	minimap_updater.timeout.connect(_on_minimap_updater_timeout)


func select():
	selection.selection.visible = true
	Game.deselected.connect(deselect)
	Game.ordered.connect(_on_ordered)


func _on_ordered( target ):
#	print( Variant.Type ) # typeof(target) )
	if target is Vector2:
		start_moving_to( target )
	else:
		if target != self:
			start_attacking( target )


func start_moving_to(dest: Vector2):
	print('started moving to ', dest )
	if not is_moving:
		is_moving = true
		minimap_timer.start()
		set_process(true)
	engine.start( dest )


func start_attacking( target: CharacterBody2D ):
#	engine.follow( unit )
	target.selection.attacked.flash()
	turret.start_engaging( target )


func _on_minimap_updater_timeout():
	minimap_updated.emit(position)


func _process(delta):
	velocity = engine.calculate(delta)
	rotation = velocity.angle()
	move_and_slide()


func _on_engine_halted():
	set_process(false)
	is_moving = false
	minimap_timer.stop()


func deselect():
	selection.selection.visible = false
	Game.deselected.disconnect(deselect)
	Game.ordered.disconnect(_on_ordered)


func _on_mouse_entered():
	selection.hover.visible = true


func _on_mouse_exited():
	selection.hover.visible = false
"

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_gsfhd"]
blend_mode = 3

[sub_resource type="Gradient" id="Gradient_br721"]
offsets = PackedFloat32Array(0.398305, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_n4vlu"]
gradient = SubResource("Gradient_br721")
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(0.5, 0)

[sub_resource type="CanvasTexture" id="CanvasTexture_34usc"]
diffuse_texture = ExtResource("2_f6vc8")
normal_texture = ExtResource("5_qioos")

[sub_resource type="OccluderPolygon2D" id="OccluderPolygon2D_v601k"]
polygon = PackedVector2Array(133, -123, 148, -109, 139, -102, 126, -115, 127, -105, 154, -76, 154, -70, 164, -66, 165, 65, 144, 68, 133, 75, 144, 71, 151, 72, 150, 81, 117, 110, 121, 113, 135, 104, 142, 111, 127, 122, -102, 123, -106, 87, -93, 87, -30, 113, -90, 80, -180, 82, -196, 56, -195, -58, -179, -81, -94, -78, -40, -111, -90, -90, -91, -124)

[sub_resource type="CircleShape2D" id="CircleShape2D_mxwms"]
radius = 201.301

[sub_resource type="GDScript" id="GDScript_50b0t"]
script/source = "extends Node

@export var TURN_RATE: float = PI / 1
@export var ACCELERATION: float = 0.8

#var velocity: Vector2
var facing: Vector2
var destination: Vector2
var elapsed: float = 0
var braking_multiplier: float 

@onready var unit: Node2D = get_parent()
@onready var SPEED: float = unit.SPEED

signal halted


func start( dest: Vector2 ):
	braking_multiplier = 1 # switch to -1 to reverse the acceleration
	facing = Vector2.from_angle(unit.rotation)
	destination = dest


func calculate( delta ):
	elapsed = clamp( elapsed + delta * ACCELERATION * braking_multiplier, 0, 1 )
	var desired_facing: Vector2 = unit.position.direction_to(destination)
	var which_side: float = sign( facing.cross(desired_facing) )
	var dot := desired_facing.dot(facing)
	facing = facing.rotated( TURN_RATE * delta * which_side * elapsed )
	if dot > desired_facing.dot( facing ):
		facing = desired_facing
	if unit.position.distance_to(destination) < elapsed * SPEED * 0.66 :
		braking_multiplier = -1
	if elapsed == 0:
		halted.emit()
		return facing
	return facing * SPEED * elapsed
"

[node name="Tank" type="CharacterBody2D" node_paths=PackedStringArray("health", "selection", "minimap_timer")]
script = SubResource("GDScript_bd8pa")
minimap_marker_type = null
SPEED = null
HEALTH = null
DAMAGE = null
health = NodePath("UIParent/Health")
selection = NodePath("UIParent/Selection")
minimap_timer = NodePath("MinimapUpdater")

[node name="DiffuseShadow" type="Sprite2D" parent="."]
z_index = -1
material = SubResource("CanvasItemMaterial_gsfhd")
position = Vector2(-46.166, 0)
scale = Vector2(10.2207, 7.20375)
texture = SubResource("GradientTexture2D_n4vlu")
offset = Vector2(5, 0)

[node name="RemoteTransform2D" type="RemoteTransform2D" parent="."]
remote_path = NodePath("../UIParent")
update_rotation = false
update_scale = false

[node name="UIParent" type="Node2D" parent="."]
top_level = true
z_index = 1
scale = Vector2(0.5, 0.5)

[node name="Health" parent="UIParent" instance=ExtResource("5_7qv1c")]

[node name="Selection" parent="UIParent" instance=ExtResource("3_3w5sw")]

[node name="BodySprite" type="Sprite2D" parent="."]
texture = SubResource("CanvasTexture_34usc")

[node name="CastShadow" type="LightOccluder2D" parent="BodySprite"]
occluder = SubResource("OccluderPolygon2D_v601k")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
z_index = -1
shape = SubResource("CircleShape2D_mxwms")

[node name="MinimapUpdater" type="Timer" parent="."]
wait_time = 0.5

[node name="Engine" type="Node" parent="."]
script = SubResource("GDScript_50b0t")

[node name="Turret" parent="." instance=ExtResource("8_q1ujq")]

[connection signal="died" from="UIParent/Health" to="." method="deselect"]
[connection signal="died" from="UIParent/Health" to="Turret" method="stop_shooting"]
